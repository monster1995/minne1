dom ：文档，对象，模型。document object model：把css样式和html标签看作对象，研究他们。
js控制交互。

对象：everything is object,万物皆对象。
（特征）属性【名称=“值”】、（行为）方法【名称=“值”】。

内置对象；自定义对象；dom对象。

.style ->通过内联的方式获取   如果没定义内联样式，则获取空值。
没有定义内敛样式的时候，一开始if(oSubMenu.style.display == '？’){ 都是否的，都跳到else里面。控制住让else=block就行。

children:专门获取子代的语法。 与getelement的区别是：遍历、查找。（但是不是w3c的定义标准【childNodes】语法，是ie搞出来的，但一般用这个）


对于节点来说，空格文本也是有效字符。一共有12个元素节点类型nodeType，1：元素；3：文字类型；8：注释。

nextSibling：下一个兄弟节点。但是注意：ie以外的找到的都是文本（空格啥的），所以又有一个语法： nextelementSibling；但是，ie并不支持。     所以，只能自己封装一个函数，来解决这个事。
下面介绍这个函数：
//**************************************************************************************

 function next（形参）{  //实参在上文next（实参【：即要找下一个兄的节点的那个节点】）
	do {
		形参=形参.nextSibling;   //如果在标准浏览器里哈市文本空格，需要用while判端
	}while（条件）； //形参.nodeTypes  ！==1 && 形参!=null;  [可以简写成 形参.nodeTypes  ！==1 && 形参;  ]
	return 形参；
}
//***************************************************************************************

if(a){  //判断a：只要不是0，空字符串，undefine，null  就是true

}

在js中 定义一个方法：
var x={};
x.方法名=“”；
…………………………………或者（常用）……………………………………………
var x={
       方法名：数值，
       方法名：数值
       }；


       相对定位：reletive
       相对于自己原来的位置改变；并且原来空间不释放。
       绝对定位：absolute
       相对于最近的已经定位的父元素（直到找到浏览器，空间释放。）
       z-index：权重值，越大在前面。




      *************************10/30******************************
       引用别的函数：<script src="jslib.js"></script>